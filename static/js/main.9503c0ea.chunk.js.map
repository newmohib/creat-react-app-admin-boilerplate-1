{"version":3,"sources":["Components/headerFooter/header.js","Components/headerFooter/footer.js","Components/Form/index.js","Components/Contents/Signin/signinForm.js","Components/Contents/Signin/index.js","Components/Contents/Signin/action.js","Components/Contents/Signin/constant.js","Components/Contents/Signup/signupForm.js","Components/Contents/Signup/index.js","Components/Contents/Signup/action.js","Components/Contents/Signup/constant.js","Components/Contents/Signup/service.js","Components/Contents/UsersTable/chieldTable.js","Components/Contents/UsersTable/index.js","Components/Contents/Pagination/index.js","Components/Contents/Filter/index.js","Routers/homeRouter.js","App.js","serviceWorker.js","Components/Contents/Signin/reducer.js","Components/Contents/Signup/reducer.js","index.js","Reducers/index.js"],"names":["Header","className","to","Footer","TextInput","divClass","labelClass","labelFor","labelText","placeholder","inputClass","inputId","inputType","inputName","onChange","error","errorClass","value","htmlFor","name","type","id","formFieldName","errorName","valueName","connect","state","signinInfo","signin","dispatch","handleSigninChange","payload","handleSigninSubmit","props","errorValue","email","password","formValue","handleChange","input","currentTarget","historyObj","useHistory","routChange","push","console","log","process","role","aria-label","onClick","onSubmit","element","preventDefault","signinSubmitArr","target","signinObj","i","length","map","item","itemIndex","key","signUpInfo","signup","handleSignupChange","handleSignupSubmit","confPassword","handleChangeInput","handleSubmitSignin","ChieldUserTable","data","data-toggle","href","aria-controls","aria-selected","aria-labelledby","firstName","lastName","country","useState","isDesplay","setIsDesplay","pageSize","totalCount","currentPage","pagesCount","pages","paginationList","isPrevious","isNext","pageSizeList","paginationType","pageInfo","setPageInfo","dataList","fromDataIndex","toDataIndex","setData","search","filterInfo","setFilterInfo","chieldData","setChieldData","sortField","sort","sortData","setSortData","getAllData","countryList","obj","_","sample","newData","filter","isId","String","includes","isFirstName","toLowerCase","isEmail","isCountry","slice","changeOrderBy","result","sortBy","reverse","useEffect","index","borderClass","viewDetails","Pagination","Math","ceil","allPages","createPageList","Number","getPager","paginationPages","totalItems","middleCeilIndex","middleFloorIndex","floor","remainingMeddleIndex","startPage","endPage","totalPages","remaining","startIndex","endIndex","range","pageCount","incrementTo","increment","decrementTo","decrement","incrementDecrement","lastElemnet","newIncrementDecrement","total","remainingIncrementTotal","remainingIncrement","remainingDecrementTotal","remainingDecrement","pageChange","newCurrentPage","disabled","style","backgroundColor","color","border","newPageSize","newItem","Filter","height","onChangeValue","HomeRoute","from","exact","path","render","App","Boolean","window","location","hostname","match","initialState","reducer","action","newState","store","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","signinReducer","signupReducer","applyMiddleware","reduxStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9503c0ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaSignOutAlt,FaSearch } from \"react-icons/fa\";\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row navbar navbar-expand-lg navbar-light bg-light p-2 shadow bg-light rounded\">\r\n                <div className=\"col-auto mr-auto float-left\">\r\n                    <div>\r\n                        <NavLink className=\"navbar-brand\" to=\"/\">Home</NavLink>\r\n                        <NavLink className=\"navbar-brand\" to=\"/admin/users\">Users</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto float-right\">\r\n                    <NavLink className=\"btn btn-outline-primary btn-sm\" to=\"/signout\"><span className=\"mr-2\">Sign Out</span><span><FaSignOutAlt /></span></NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <span className=\"text-muted\">Place sticky footer content here.</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nlet TextInput = ({\r\n    divClass,\r\n    labelClass,\r\n    labelFor,\r\n    labelText,\r\n    placeholder,\r\n    inputClass,\r\n    inputId,\r\n    inputType,\r\n    inputName,\r\n    onChange,\r\n    error,\r\n    errorClass,\r\n    value }) => {\r\n    return (\r\n        <div className={divClass}>\r\n            <label className={labelClass} htmlFor={labelFor}>{labelText}</label>\r\n            <input name={inputName} onChange={onChange} placeholder={placeholder} type={inputType} className={inputClass} id={inputId} value={value} />\r\n            {error && <div className={errorClass}>{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { TextInput };\r\n","let formFieldName =\r\n    [\r\n        {\r\n            divClass: \"form-group col-md-12\",\r\n            labelClass: \"\",\r\n            labelFor: \"email\",\r\n            labelText: \"Email\",\r\n            placeholder: \"\",\r\n            inputClass: \"form-control\",\r\n            inputId: \"email\",\r\n            inputType: \"text\",\r\n            inputName:\"email\",\r\n            errorName:\"email\",\r\n            errorClass:\"\",\r\n            valueName:\"email\"\r\n        },\r\n        {\r\n            divClass: \"form-group col-md-12\",\r\n            labelClass: \"\",\r\n            labelFor: \"password\",\r\n            labelText: \"Password\",\r\n            placeholder: \"\",\r\n            inputClass: \"form-control\",\r\n            inputId: \"password\",\r\n            inputType: \"password\",\r\n            inputName:\"password\",\r\n            errorName:\"password\",\r\n            errorClass:\"\",\r\n            valueName:\"password\"\r\n        }\r\n    ];\r\n\r\n    export {formFieldName};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { TextInput } from '../../Form';\r\nimport { formFieldName } from './signinForm';\r\nimport { handleSigninChange, handleSigninSubmit } from './action';\r\n\r\nlet Signin = (props) => {\r\n    let errorValue = { email: \"\", password: \"\" };\r\n    let formValue = props.signinInfo;\r\n    let handleChange = ({ currentTarget: input }) => {\r\n        let formValue = props.signinInfo;\r\n\r\n        let signinInfo = { ...formValue, [input.name]: input.value };\r\n        props.handleSigninChange(signinInfo);\r\n    };\r\n\r\n    const handleSubmit = (element) => {\r\n        element.preventDefault();\r\n        let signinSubmitArr = element.target;\r\n        let signinObj = {};\r\n        for (let i = 0; i < signinSubmitArr.length; i++) {\r\n            const value = signinSubmitArr[i].value;\r\n            const name = signinSubmitArr[i].name;\r\n            if (name !== \"\") { signinObj[name] = value; }\r\n        };\r\n        props.handleSigninSubmit(signinObj);\r\n    }\r\n    let historyObj = useHistory();\r\n    let routChange = (value) => {\r\n        historyObj.push(value)\r\n    }\r\n    \r\n    console.log(\"env\", process.env.REACT_APP_NOT_SECRET_CODE);\r\n    return (\r\n        <div className=\"row justify-content-center mt-5\">\r\n            <div className=\"col-12 col-md-8 col-xl-6 col-lg-6 col-sm-10\">\r\n                <div className=\"container custom_form mt-5\">\r\n                    <div className=\"row mt-0 mr-n4 ml-n4\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row mt-n2 mb-2 ml-n4 mr-n4\">\r\n                                    <div className=\"col-12 \">\r\n                                        <div className=\"btn-group btn-block btn-group-lg mx-auto \" role=\"group\" aria-label=\"Basic example\">\r\n                                            <button onClick={() => routChange(\"/\")} type=\"button\" className=\"btn btn-outline-primary border-top-0 border-right-0 border-left-0  border-bottom\">Sign In</button>\r\n                                            <button onClick={() => routChange(\"/authe/signup\")} type=\"button\" className=\"btn btn-outline-primary border-top-0 border-right-0 border-left-0  border-bottom\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"row mx-2 justify-content-center font-weight-bold h3\">Sign In</div>\r\n                                    <div className=\"row mx-2\">\r\n                                        {\r\n                                            formFieldName.map((item, itemIndex) => {\r\n                                                return <TextInput\r\n                                                    key={itemIndex}\r\n                                                    {...item}\r\n                                                    value={formValue[item.valueName]}\r\n                                                    error={errorValue[item.errorName]}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"row mx-2 \">\r\n                                        <div className=\"col-auto mr-auto float-left\">\r\n                                            <div>\r\n                                                <button onClick={() => routChange(\"/authe/signup\")} className=\"btn btn-light \"><span className=\"\">Forgot Password</span></button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-auto float-right\">\r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-lg \">Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = state => ({\r\n    signinInfo: state.signin,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleSigninChange: (value) => dispatch(handleSigninChange(value)),\r\n    handleSigninSubmit: (value) => dispatch(handleSigninSubmit(value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","import { GET_USERS, SIGNIN_INPUT, SIGNIN_SUBMIT } from './constant';\r\n\r\n\r\nexport const handleSigninChange = (inputObj) => ({\r\n    type: SIGNIN_INPUT,\r\n    payload:inputObj\r\n});\r\n\r\nexport const handleSigninSubmit= (inputObj) => ({\r\n    type: SIGNIN_SUBMIT,\r\n    payload:inputObj\r\n});\r\n","export const GET_USERS = 'src/Signin/GET_USERS';\r\nexport const SIGNIN_INPUT = 'src/Signin/SIGNIN_INPUT';\r\nexport const SIGNIN_SUBMIT = 'src/Signin/SIGNIN_SUBMIT';","let formFieldName =\r\n    [\r\n        {\r\n            divClass: \"form-group col-md-12\",\r\n            labelClass: \"\",\r\n            labelFor: \"email\",\r\n            labelText: \"Email\",\r\n            placeholder: \"\",\r\n            inputClass: \"form-control\",\r\n            inputId: \"email\",\r\n            inputType: \"text\",\r\n            inputName:\"email\",\r\n            errorName:\"email\",\r\n            errorClass:\"\",\r\n            valueName:\"email\"\r\n        },\r\n        {\r\n            divClass: \"form-group col-md-12\",\r\n            labelClass: \"\",\r\n            labelFor: \"password\",\r\n            labelText: \"Password\",\r\n            placeholder: \"\",\r\n            inputClass: \"form-control\",\r\n            inputId: \"password\",\r\n            inputType: \"password\",\r\n            inputName:\"password\",\r\n            errorName:\"password\",\r\n            errorClass:\"\",\r\n            valueName:\"password\"\r\n        },\r\n        {\r\n            divClass: \"form-group col-md-12\",\r\n            labelClass: \"\",\r\n            labelFor: \"confPassword\",\r\n            labelText: \"Confirm Password\",\r\n            placeholder: \"\",\r\n            inputClass: \"form-control\",\r\n            inputId: \"confPassword\",\r\n            inputType: \"password\",\r\n            inputName:\"confPassword\",\r\n            errorName:\"confPassword\",\r\n            errorClass:\"\",\r\n            valueName:\"confPassword\"\r\n        }\r\n    ];\r\n\r\n    export {formFieldName};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextInput } from '../../Form';\r\nimport { formFieldName } from './signupForm';\r\nimport { handleSignupChange, handleSignupSubmit } from './action';\r\nimport { handleChangeInput, handleSubmitSignin } from './service';\r\n\r\nlet Signup = (props) => {\r\n    let errorValue = { email: \"\", password: \"\", confPassword: \"\" };\r\n\r\n    let formValue = props.signUpInfo;\r\n    let handleChange = ({ currentTarget: input }) => {\r\n        formValue = handleChangeInput(input, props);\r\n    };\r\n\r\n    const handleSubmit = (element) => {\r\n        element.preventDefault();\r\n        let signinSubmitArr = element.target;\r\n        handleSubmitSignin(signinSubmitArr, props);\r\n    }\r\n    let historyObj = useHistory();\r\n    let routChange = (value) => {\r\n        historyObj.push(value)\r\n    }\r\n    return (\r\n        <div className=\"row justify-content-center mt-5\">\r\n            <div className=\"col-12 col-md-8 col-xl-6 col-lg-6 col-sm-10\">\r\n                <div className=\"container custom_form mt-5\">\r\n                    <div className=\"row mt-0 mr-n4 ml-n4\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row mt-n2 mb-2 ml-n4 mr-n4\">\r\n                                    <div className=\"col-12 \">\r\n                                        <div className=\"btn-group btn-block btn-group-lg mx-auto \" role=\"group\" aria-label=\"Basic example\">\r\n                                            <button onClick={() => routChange(\"/\")} type=\"button\" className=\"btn btn-outline-primary border-top-0 border-right-0 border-left-0  border-bottom\">Sign In</button>\r\n                                            <button onClick={() => routChange(\"/authe/signup\")} type=\"button\" className=\"btn btn-outline-primary border-top-0 border-right-0 border-left-0  border-bottom\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"row mx-2 justify-content-center font-weight-bold h3\">Sign Up</div>\r\n                                    <div className=\"row mx-2\">\r\n                                        {\r\n                                            formFieldName.map((item, itemIndex) => {\r\n                                                return <TextInput\r\n                                                    key={itemIndex}\r\n                                                    {...item}\r\n                                                    value={formValue[item.valueName]}\r\n                                                    error={errorValue[item.errorName]}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"row mx-2 justify-content-center font-weight-bold\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => ({\r\n    signUpInfo: state.signup,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleSignupChange: (value) => dispatch(handleSignupChange(value)),\r\n    handleSignupSubmit: (value) => dispatch(handleSignupSubmit(value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import {  SIGNUP_INPUT, SIGNUP_SUBMIT } from './constant';\r\n\r\n\r\nexport const handleSignupChange = (inputObj) => ({\r\n    type: SIGNUP_INPUT,\r\n    payload:inputObj\r\n});\r\n\r\nexport const handleSignupSubmit= (inputObj) => ({\r\n    type: SIGNUP_SUBMIT,\r\n    payload:inputObj\r\n});\r\n","export const SIGNUP_INPUT = 'src/Signup/SIGNUP_INPUT';\r\nexport const SIGNUP_SUBMIT = 'src/Signup/SIGNUP_SUBMIT';","\r\n\r\nexport let handleChangeInput = (input,props) => {\r\n    let formValue = props.signUpInfo;\r\n    let signUpInfo = { ...formValue, [input.name]: input.value };\r\n    props.handleSignupChange(signUpInfo);\r\n    return formValue\r\n\r\n};\r\n\r\nexport let handleSubmitSignin = (signinSubmitArr,props) => {\r\n    let signinObj = {};\r\n    for (let i = 0; i < signinSubmitArr.length; i++) {\r\n        const value = signinSubmitArr[i].value;\r\n        const name = signinSubmitArr[i].name;\r\n        if (name !== \"\") { signinObj[name] = value; }\r\n    };\r\n    props.handleSignupSubmit(signinObj);\r\n}","\r\nimport React from 'react';\r\n\r\n\r\n\r\nlet ChieldUserTable = (props) => {\r\n    console.log(\"data\", props.data);\r\n    let { data } = props\r\n    return (\r\n        <div className='row  bg-light ' >\r\n            <div className=\"col bg-light px-0\">\r\n                <div className=\"container-fluid min_width_1000   bg-light \">\r\n                    <div className=\"row \">\r\n                        <div className=\"col pt-2\">\r\n                            <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link active\" id=\"pills-view-tab\" data-toggle=\"pill\" href=\"#pills-view\" role=\"tab\" aria-controls=\"pills-view\" aria-selected=\"true\">View</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" id=\"pills-update-tab\" data-toggle=\"pill\" href=\"#pills-update\" role=\"tab\" aria-controls=\"pills-update\" aria-selected=\"false\">Update</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" id=\"pills-delete-tab\" data-toggle=\"pill\" href=\"#pills-delete\" role=\"tab\" aria-controls=\"pills-delete\" aria-selected=\"false\">Delete</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tab-content\" id=\"pills-tabContent\">\r\n                    <div className=\"tab-pane fade show active\" id=\"pills-view\" role=\"tabpanel\" aria-labelledby=\"pills-view-tab\">\r\n                        <div className=\"container-fluid min_width_1000 border-bottom   bg-light\">\r\n\r\n                            <div className=\"row info-table__tr \">\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 font-weight-bold\">\r\n                                            <label htmlFor=\"\">First Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-8\">\r\n                                            <div className=\"table_value_pre\">{data.firstName}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 font-weight-bold\">\r\n                                            <label htmlFor=\"\">Last Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-8\">\r\n                                            <div className=\"table_value_pre\">{data.lastName}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row info-table__tr \">\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 font-weight-bold\">\r\n                                            <label htmlFor=\"\">Email</label>\r\n                                        </div>\r\n                                        <div className=\"col-8\">\r\n                                            <div className=\"table_value_pre\">{data.email}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 font-weight-bold\">\r\n                                            <label htmlFor=\"\">Country</label>\r\n                                        </div>\r\n                                        <div className=\"col-8\">\r\n                                            <div className=\"table_value_pre\">{data.country}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"pills-update\" role=\"tabpanel\" aria-labelledby=\"pills-update-tab\">\r\n                        <div className=\"container-fluid pb-2  min_width_1000 border-bottom   bg-light\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    Update\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"pills-delete\" role=\"tabpanel\" aria-labelledby=\"pills-delete-tab\">\r\n                        <div className=\"container-fluid pb-2 min_width_1000 border-bottom   bg-light\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    Delete\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChieldUserTable;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IoMdArrowDropdown,IoMdArrowDropup } from \"react-icons/io\";\r\nimport _ from 'lodash';\r\n\r\nimport { Pagination, Filter } from '../index'\r\nimport ChieldUserTable from './chieldTable'\r\n\r\nlet Users = (props) => {\r\n    let [isDesplay, setIsDesplay] = useState(null);\r\n    let [pageInfo, setPageInfo] = useState({ pageSize: 10, totalCount: 0, currentPage: 1, pagesCount: 0, pages: [], paginationList: [1, 2, 3, 4, 5, 6], isPrevious: \"\", isNext: \"\", pageSizeList: [ 10, 20, 30, 50,99], paginationType: \"dropdown\" }); // dropdown / list\r\n    let [data, setData] = useState({ dataList: [], fromDataIndex: 0, toDataIndex: pageInfo.pageSize });\r\n    let [filterInfo, setFilterInfo] = useState({ search: \"\", id: \"\", firstName: \"\", email: \"\", country: \"allCountry\" });\r\n    let [chieldData, setChieldData] = useState({});\r\n    let [sortData, setSortData] = useState({ sortField: \"\", sort: \"\" });\r\n\r\n    let viewDetails = (index, item) => {\r\n        if (isDesplay === index) {\r\n            setIsDesplay(null);\r\n            setChieldData({})\r\n        } else {\r\n            setIsDesplay(index);\r\n            setChieldData(item)\r\n        }\r\n    };\r\n\r\n    let getAllData = (fromDataIndex, toDataIndex) => {\r\n        //here start server side paginatin with filter then get the data\r\n        let countryList=[\"Bangladesh\",\"India\",\"Pakistan\",\"Germany\",\"Italy\",\"France\"]\r\n        let dataList = [];\r\n        \r\n        for (let i = 1; i < 300; i++) {\r\n            let obj={ }\r\n             obj.id= i;\r\n             obj.firstName= \"Mohibur\"+i;\r\n             obj.lastName= \"Rahmna\"+i;\r\n             obj.email= `mohib+${i}@gmail.com`;\r\n             obj.country= _.sample(countryList);\r\n             dataList.push(obj)  \r\n        }\r\n        //optional : there is client site filter\r\n\r\n        var newData = dataList.filter((item) => {\r\n            if (filterInfo.search !== \"\") {\r\n                let isId = String(item.id).includes(String(filterInfo.search));\r\n                let isFirstName = item.firstName.toLowerCase().includes(filterInfo.search.toLowerCase());\r\n                let isEmail = item.email.toLowerCase().includes(filterInfo.search.toLowerCase());\r\n                let isCountry = item.country.toLowerCase().includes(filterInfo.search.toLowerCase());\r\n                //console.log(\"isFirstName\", isFirstName, \"isEmail\", isEmail, \"isCountry\", isCountry);\r\n                if (isId) {\r\n                    return item\r\n                } else if (isFirstName) {\r\n                    return item\r\n                } else if (isEmail) {\r\n                    return item\r\n                } else if (isCountry) {\r\n                    return item\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n\r\n        let newDataList = newData.slice(fromDataIndex, toDataIndex)\r\n        let responseData = { dataList: newDataList, totalCount: newData.length };\r\n        return responseData;\r\n    }\r\n\r\n    const changeOrderBy = (result) => {\r\n        console.log(\"changeOrderBy\", result);\r\n        let sortBy = \"\"\r\n        let newData = []\r\n        if (sortData.sortField === \"\" || (result === sortData.sortField && sortData.sort === \"ascending\" || (result !== sortData.sortField))) {\r\n            var descendingOrder = _.sortBy(data.dataList, result).reverse();\r\n            newData = descendingOrder;\r\n            sortBy = \"descending\";\r\n        }\r\n        else if (result === sortData.sortField && sortData.sort === \"descending\") {\r\n            var ascendingOrder = _.sortBy(data.dataList, result);\r\n            newData = ascendingOrder;\r\n            sortBy = \"ascending\";\r\n        }\r\n        setSortData({ sort: sortBy, sortField: result });\r\n        setData({ ...data, dataList: newData });\r\n    };\r\n\r\n    useEffect(\r\n        () => {\r\n            let fromDataIndex = data.fromDataIndex;\r\n            let toDataIndex = data.toDataIndex;\r\n            let { totalCount } = getAllData(fromDataIndex, toDataIndex);\r\n            setPageInfo({ ...pageInfo, totalCount });\r\n        }, []\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            let fromDataIndex = pageInfo.currentPage === 1 ? 0 : (pageInfo.currentPage * pageInfo.pageSize) - pageInfo.pageSize;\r\n            let toDataIndex = pageInfo.currentPage === 1 ? pageInfo.pageSize : pageInfo.currentPage * pageInfo.pageSize;\r\n            let { dataList, totalCount } = getAllData(fromDataIndex, toDataIndex);\r\n            setData({ dataList: dataList, fromDataIndex, toDataIndex })\r\n            setPageInfo({ ...pageInfo, totalCount });\r\n            setIsDesplay(null);\r\n        }, [pageInfo.currentPage, pageInfo.pageSize, filterInfo.country, filterInfo.firstName, filterInfo.id, filterInfo.email, filterInfo.search]\r\n    );\r\n\r\n    return (\r\n        <div className=\"row justify-content-center mt-5 \">\r\n            <div className=\"col-12 col-md-12 col-xl-12 col-lg-12 col-sm-12 \">\r\n                {/* after pagination bottom padding if need then remove pb-0 */}\r\n                <div className=\"container custom_form mt-5 pb-0\">\r\n                    <div className=\"row mt-2 mb-1\">\r\n                        <div className=\"col-12 col-md-auto mr-auto float-md-left h4 text-center\">\r\n                            <div>\r\n                                User Management\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-auto float-right\">\r\n                            <Filter filterInfo={filterInfo} setFilterInfo={setFilterInfo} pageInfo={pageInfo} setPageInfo={setPageInfo} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row  mt-0 mb-0 mr-n4 ml-n4\" >\r\n                        <div className=\"col-12\" >\r\n                            {/* after pagination bottom mrgin if need mb-2 */}\r\n                            <div className=\" mt-2 ml-2 mr-2\" >\r\n                                {/* overflow-auto for horizontel over flow with  min_width_1000  in row*/}\r\n                                <div className=\"container-fluid border overflow-auto\" >\r\n                                    <div className=\"row text-center font-weight-bold  border-bottom min_width_1000\">\r\n                                        <div className=\"col px-0 cursor_pointer\" onClick={() => changeOrderBy(\"id\")}>\r\n                                            <div className=\"border-right\">\r\n                                                <div className=\"py-2 pl-3 pr-0\">\r\n                                                    ID\r\n                                                     {sortData.sortField === \"id\" && sortData.sort ===\"descending\" ? <span><IoMdArrowDropup /></span>: <span ><IoMdArrowDropdown /></span> }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col px-0 cursor_pointer\" onClick={() => changeOrderBy(\"firstName\")}>\r\n                                            <div className=\"border-right\">\r\n                                                <div className=\"py-2 pl-3 pr-0\">\r\n                                                    First Name\r\n                                                    {sortData.sortField === \"firstName\" && sortData.sort ===\"descending\" ? <span ><IoMdArrowDropup /></span>: <span ><IoMdArrowDropdown /></span> }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col px-0 cursor_pointer\" onClick={() => changeOrderBy(\"email\")}>\r\n                                            <div className=\"border-right\">\r\n                                                <div className=\"py-2 pl-3 pr-0\">\r\n                                                    Email\r\n                                                    {sortData.sortField === \"email\" && sortData.sort ===\"descending\" ? <span ><IoMdArrowDropup /></span>: <span ><IoMdArrowDropdown /></span> }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col px-0 cursor_pointer\" onClick={() => changeOrderBy(\"country\")}>\r\n                                            <div className=\"border-right\">\r\n                                                <div className=\"py-2 pl-3 pr-0\">\r\n                                                    Country\r\n                                                    {sortData.sortField === \"country\" && sortData.sort ===\"descending\" ? <span ><IoMdArrowDropup /></span>: <span ><IoMdArrowDropdown /></span> }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col px-0\" >\r\n                                            <div className=\"\">\r\n                                                <div className=\"p-2\">\r\n                                                    Action\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        data.dataList.map((item, index) => {\r\n                                            let borderClass = data.dataList.length - 1 !== index || index === isDesplay ? \"border-bottom\" : \"\"\r\n                                            return (\r\n                                                <div key={index} >\r\n                                                    <div className={`row text-center  ${borderClass} min_width_1000`}>\r\n                                                        <div className=\"col px-0\">\r\n                                                            <div className=\"border-right\">\r\n                                                                <div className=\" p-2\">\r\n                                                                    {item.id}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col px-0\">\r\n                                                            <div className=\"border-right\">\r\n                                                                <div className=\" p-2\">\r\n                                                                    {item.firstName}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col px-0\">\r\n                                                            <div className=\"border-right\">\r\n                                                                <div className=\" p-2\">\r\n                                                                    {item.email}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col px-0\">\r\n                                                            <div className=\"border-right\">\r\n                                                                <div className=\" p-2\">\r\n                                                                    {item.country}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col px-0\">\r\n                                                            <div className=\"\">\r\n                                                                <div className=\"p-1\">\r\n                                                                    <button onClick={() => viewDetails(index, item)} type=\"button\" className=\"btn btn-primary btn-sm\">More Options</button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {\r\n                                                        isDesplay === index &&\r\n                                                        <ChieldUserTable data={chieldData} />\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <Pagination pageInfo={pageInfo} setPageInfo={setPageInfo} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => ({\r\n    //signinInfo: state.signin,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // handleSigninChange: (value) => dispatch(handleSigninChange(value)),\r\n    // handleSigninSubmit: (value) => dispatch(handleSigninSubmit(value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, { useEffect } from 'react';\r\nimport _ from 'lodash';\r\n\r\nfunction Pagination(props) {\r\n    //pagination dropdown finlly completed with List pagination\r\n\r\n    useEffect(\r\n        () => {\r\n            let { pageInfo } = props;\r\n            let pagesCount = Math.ceil(pageInfo.totalCount / pageInfo.pageSize);\r\n            let allPages = createPageList(pageInfo.currentPage, pagesCount);\r\n            let isPrevious = Number(pageInfo.currentPage) == 1 ? \"disabled\" : \"\";\r\n            let isNext = Number(pageInfo.currentPage) == pagesCount ? \"disabled\" : \"\";\r\n            let { pages } = getPager(pageInfo.totalCount, pageInfo.currentPage, pageInfo.pageSize, pageInfo.paginationList);\r\n\r\n            let paginationPages = pageInfo.paginationType === \"dropdown\" ? allPages : pages;\r\n            props.setPageInfo({ ...pageInfo, pagesCount, pages: paginationPages, isPrevious, isNext });\r\n        }, [props.pageInfo.totalCount]\r\n    );\r\n\r\n\r\n    const getPager = (totalItems, currentPage, pageSize, paginationList) => {\r\n        console.log(\"currentPage\", currentPage);\r\n        let middleCeilIndex = Math.ceil(paginationList.length / 2);\r\n        let middleFloorIndex = Math.floor(paginationList.length / 2);\r\n        let remainingMeddleIndex = paginationList.length - middleCeilIndex;\r\n        currentPage = currentPage || 1;\r\n        pageSize = pageSize || 10;\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n        var startPage, endPage;\r\n        if (totalPages <= paginationList.length) {\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            if (currentPage <= middleCeilIndex) {\r\n                startPage = 1;\r\n                endPage = paginationList.length;\r\n            } else if (Number(currentPage) + Number(remainingMeddleIndex) <= totalPages) {\r\n                startPage = currentPage - remainingMeddleIndex;\r\n                endPage = Number(currentPage) + Number(remainingMeddleIndex) - 1;\r\n            } else if (Number(currentPage) + Number(remainingMeddleIndex) > totalPages && currentPage <= totalPages) {\r\n                let remaining = totalPages - currentPage;\r\n                startPage = Number(currentPage - middleFloorIndex) + Number(remaining) - 1;\r\n                endPage = totalPages;\r\n            }\r\n        }\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = startIndex + pageSize;\r\n        var pages = _.range(startPage, endPage + 1);\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    const createPageList = (currentPage, pageCount) => {\r\n        let total = 50;\r\n        currentPage = Number(currentPage);\r\n        pageCount = Number(pageCount);\r\n\r\n        let incrementTo = currentPage + total >= pageCount ? pageCount : currentPage + total;\r\n        let increment = _.range(currentPage + 1, incrementTo + 1);\r\n        let decrementTo = total > increment[0] ? increment[0] - 1 : pageCount <= total ? pageCount : total;\r\n        let decrement = _.range(currentPage - decrementTo + 1, currentPage + 1);\r\n\r\n        let incrementDecrement = [...decrement, ...increment];\r\n        let lastElemnet = incrementDecrement.slice(-1)[0];\r\n        let newIncrementDecrement = [];\r\n\r\n        if (decrement.length < increment.length && lastElemnet <= pageCount && (total * 2) <= pageCount) {\r\n            let remainingIncrementTotal = (total * 2) - incrementDecrement.length;\r\n            let remainingIncrement = _.range(lastElemnet + 1, incrementDecrement.length + remainingIncrementTotal + 1);\r\n            newIncrementDecrement = [...incrementDecrement, ...remainingIncrement];\r\n        }\r\n        else if (decrement.length === increment.length && lastElemnet <= pageCount && (total * 2) <= pageCount) {\r\n            newIncrementDecrement = [...incrementDecrement];\r\n        }\r\n        else if (decrement.length > increment.length && increment.length < total && (total * 2) <= pageCount) {\r\n            let remainingDecrementTotal = total - increment.length;\r\n            let remainingDecrement = _.range(currentPage - remainingDecrementTotal - total, currentPage);\r\n            newIncrementDecrement = [...remainingDecrement, ...increment];\r\n        }\r\n        else {\r\n            newIncrementDecrement = [...incrementDecrement];\r\n        }\r\n        return newIncrementDecrement\r\n    }\r\n\r\n    const pageChange = (newCurrentPage) => {\r\n\r\n        let { pageInfo } = props\r\n        let { currentPage, totalPages, pages } = getPager(pageInfo.totalCount, newCurrentPage, pageInfo.pageSize, pageInfo.paginationList);\r\n        currentPage = Number(currentPage)\r\n        let allPages = createPageList(newCurrentPage, pageInfo.pagesCount);\r\n        let isPrevious = currentPage === 1 ? \"disabled\" : \"\";\r\n        let isNext = currentPage === totalPages ? \"disabled\" : \"\";\r\n        let paginationPages = pageInfo.paginationType === \"dropdown\" ? allPages : pages;\r\n        props.setPageInfo({ ...pageInfo, pagesCount: totalPages, pages: paginationPages, isPrevious, isNext, currentPage });\r\n    }\r\n\r\n    const pageSizeChange = ({ currentTarget: input }) => {\r\n        let { pageInfo } = props\r\n        let newPageSize = input.value;\r\n        let { currentPage, pageSize, totalPages, pages } = getPager(pageInfo.totalCount, pageInfo.currentPage, newPageSize, pageInfo.paginationList);\r\n        currentPage = currentPage > totalPages ? totalPages : currentPage;\r\n        let allPages = _.range(1, totalPages + 1);\r\n        let paginationPages = pageInfo.paginationType === \"dropdown\" ? allPages : pages;\r\n        props.setPageInfo({ ...pageInfo, pagesCount: totalPages, pages: paginationPages, currentPage, pageSize });\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid mt-2\">\r\n            <div className=\"row\" >\r\n                <div className=\"col px-0 mb-2 mr-1 order-1 order-md-0\">\r\n                    <div>\r\n                        <button disabled={props.pageInfo.isPrevious} style={{ backgroundColor: \"#F0EFEF\", color: \"black\", border: \"none\" }} onClick={() => pageChange(props.pageInfo.currentPage - 1)} className={`btn btn-light btn-block btn-lg`}><span>Previous</span></button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-12 col-md-auto mr-auto ml-auto my-auto order-0 px-md-0\">\r\n                    <div className=\"container-fluid px-0\">\r\n                        <div className=\"row text-center ml-n4 mr-n4 ml-md-1 mr-md-1 \">\r\n                            <div className=\"col-4 col-sm-4 col-md-5 pl-2\">\r\n                                <select\r\n                                    className=\"form-control mb-2 px-1\"\r\n                                    onChange={pageSizeChange} >\r\n\r\n                                    {props.pageInfo.pageSizeList.map((item, index) => {\r\n                                        let newItem = item < 10 ? `0${item} rows` : `${item} rows`;\r\n                                        return (\r\n                                            <option\r\n                                                key={index + 40}\r\n                                                value={item}\r\n                                            >{newItem}\r\n                                            </option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-2 col-sm-2 col-md-1 mt-2 \">\r\n                                <span className=\"mb-3 mr-n5 mr-md-1\">Page</span>\r\n                            </div>\r\n                            <div className=\"col-4 col-sm-4 col-md-auto  ml-md-3  pl-3 pr-2 mr-md-2 \">\r\n                                <select\r\n                                    value={props.pageInfo.currentPage}\r\n                                    className=\"form-control mb-2 \"\r\n                                    onChange={({ currentTarget }) => pageChange(currentTarget.value)} >\r\n                                    {props.pageInfo.pages.map((item, index) => {\r\n                                        let newItem = item < 10 ? `0${item}` : `${item}`;\r\n                                        return (\r\n                                            <option\r\n                                                key={index + 50}\r\n                                                value={item}\r\n                                            >{newItem}\r\n                                            </option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-2 col-sm-2 col-md-auto  pr-0 mt-2 ml-n4 \">\r\n                                <span className=\"mb-3 \">of {props.pageInfo.pagesCount < 10000 ? props.pageInfo.pagesCount : 9999 + '+'}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col px-0 order-2 order-md-last mb-2 ml-1\">\r\n                    <button disabled={props.pageInfo.isNext} style={{ backgroundColor: \"#F0EFEF\", color: \"black\", border: \"none\" }} onClick={() => pageChange(props.pageInfo.currentPage + 1)} className={`btn btn-light btn-block btn-lg`}><span>Next</span></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { useEffect } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nfunction Filter(props) {\r\n\r\n    let CountryLit = [\r\n        { id: 1, country: \"Bangladesh\" },\r\n        { id: 2, country: \"India\" },\r\n        { id: 3, country: \"Pakistan\" },\r\n        { id: 4, country: \"Germany\" },\r\n        { id: 5, country: \"Italy\" },\r\n        { id: 6, country: \"France\" },\r\n    ];\r\n\r\n    let onChangeValue = (item) => {\r\n        // sort Number\r\n        // filterInfo.sort((a,b)=> a.id -b.id);\r\n        let { name, value } = item;\r\n        let { pageInfo, filterInfo } = props;\r\n        console.log(name, \":\", value);\r\n        props.setFilterInfo({ ...filterInfo, [name]: value });\r\n        props.setPageInfo({ ...pageInfo, currentPage: 1 });\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"\">\r\n            <input style={{height:\"30px\"}} placeholder=\"Search\" id=\"search\" name=\"search\" type=\"text\" className=\"form-control rounded-pill\" onChange={({ currentTarget: input }) => onChangeValue({ name: input.name, value: input.value })} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { Route, Switch, useHistory,Redirect } from 'react-router-dom';\r\nimport {\r\n    Signin,\r\n    Signup,\r\n    Users\r\n} from '../Components/Contents';\r\n\r\nfunction HomeRoute() {\r\n    const history = useHistory();\r\n    let isLogin = true;\r\n    return (\r\n        <div className=\"container\">\r\n            <Switch>\r\n                <Redirect from='/' to='/authe/signin' exact />\r\n                <Route path=\"/authe/signin\" exact render={() => <Signin />}></Route>\r\n                <Route path=\"/authe/signup\" exact render={() => <Signup />}></Route>\r\n                <Route path=\"/admin/users\" exact render={() => <Users />}></Route>\r\n                <Route render={() => <div>Not Found</div>}></Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter  } from 'react-router-dom';\r\nimport Header from './Components/headerFooter/header';\r\nimport Footer from './Components/headerFooter/footer';\r\nimport HomeRouter from './Routers/homeRouter';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle';\r\nimport './Resources/css/style.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n    {/* <div class=\"overlay active\"></div> */}\r\n      <main role=\"main\" className=\"flex-shrink-0\">\r\n        <Header />\r\n        <HomeRouter />\r\n      </main>\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { GET_USERS, SIGNIN_INPUT, SIGNIN_SUBMIT } from './constant';\r\n\r\nlet initialState = { email: \"\", password: \"\" };\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    console.log(\"reducer Signin Information\", action.payload);\r\n\r\n    switch (action.type) {\r\n        case SIGNIN_INPUT:\r\n            return  action.payload;\r\n            break;\r\n        case SIGNIN_SUBMIT:\r\n            return  action.payload;\r\n            break;\r\n    }\r\n    return newState;\r\n};\r\n\r\nexport default reducer;\r\n\r\nexport {initialState};","import { SIGNUP_INPUT, SIGNUP_SUBMIT } from './constant';\r\n\r\nlet initialState = { email: \"\", password: \"\" ,confPassword:\"\"};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    console.log(\"reducer Signup Information\", action.payload);\r\n\r\n    switch (action.type) {\r\n        case SIGNUP_INPUT:\r\n            return {...state, ...action.payload};\r\n            break;\r\n        case SIGNUP_SUBMIT:\r\n            return {...state, ...action.payload};\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\nexport {initialState};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reduxStore from './Reducers';\r\nconst store = reduxStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import { combineReducers, applyMiddleware, compose, createStore } from 'redux'\r\nimport signinReducer from '../Components/Contents/Signin/reducer';\r\nimport signupReducer from '../Components/Contents/Signup/reducer';\r\n\r\n\r\nconst rootReducer = () => combineReducers({\r\n    signin: signinReducer,\r\n    signup: signupReducer,\r\n});\r\n\r\n\r\n\r\nexport default function configureStore() {\r\n    const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    const store = createStore(\r\n        rootReducer(),\r\n        composeEnhancer(\r\n            applyMiddleware(),\r\n        ),\r\n    )\r\n    return store\r\n}"],"sourceRoot":""}